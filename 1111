class StudentStack {
    private int maxSize;
    private StudentStack[] stackArray;
    private int top;

    public StudentStack(int size) {
        this.maxSize = size;
        this.stackArray = new StudentStack[maxSize];
        this.top = -1;  // Bắt đầu từ -1, stack trống
    }

    public boolean isEmpty() {
        return top == -1;
    }

    public boolean isFull() {
        return top == maxSize - 1;
    }

    public void push(StudentStack student) {
        if (!isFull()) {
            stackArray[++top] = student;
        } else {
            System.out.println("Stack is full. Cannot push.");
        }
    }

    public StudentStack pop() {
        if (!isEmpty()) {
            return stackArray[top--];
        } else {
            System.out.println("Stack is empty. Cannot pop.");
            return null;
        }
    }

    public StudentStack peek() {
        if (!isEmpty()) {
            return stackArray[top];
        } else {
            System.out.println("Stack is empty. Cannot peek.");
            return null;
        }
    }

    public void display() {
        if (!isEmpty()) {
            System.out.println("Stack contents:");
            for (int i = top; i >= 0; i--) {
                stackArray[i].display();
            }
        } else {
            System.out.println("Stack is empty.");
        }
    }
}
